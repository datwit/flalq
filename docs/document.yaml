swagger: '2.0'
info:
  description: This is API_flalq_documentation. This API use FLask, SQLAlchemy, Marshmallow and Unittest. For more information see [API flalq](https://github.com/datwit/flalq/)
  version: 1.0.0
  title: Test-Swagger
  termsOfService:
  contact:
    email: danay3k@nauta.cu
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
schemes:
- http
tags:
  - name: Offices
    description: Shop offices
  - name: Employees
    description: Employees by offices
  - name: Customers
    description: Customers by employees
  - name: Productlines
    description: Product lines in the Business
  - name: Products
    description: Products by product lines
  - name: Orders
    description: Sale orders
  - name: Orderdetails
    description: Order details by products
  - name: Payments
    description: Payments by customers
paths:
  /offices/:
    get:
      tags:
      - Offices
      summary: Return all offices rows
      produces:
        - application/json
      responses:
        '200':
          description: Success Request
          schema:
            $ref: '#/definitions/offices'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
    post:
      tags:
      - Offices
      summary: Add new office
      description: One offices row requested by officeCode key
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Office Rows
        in: body
        description: Office rows that needs to be added to store
        required: true
        schema:
          $ref: '#/definitions/offices'
      responses:
        '201':
          description: Created Request
          schema:
            $ref: '#/definitions/offices'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '422':
          description: Invalid field input
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
  /offices/{officeCode}:
    get:
      tags:
      - Offices
      summary: Return one offices
      description: Return only one offices row filter by officeCode key
      produces:
      - application/json
      parameters:
      - name: officeCode
        in: path
        description: Office code that need to be considered for filter
        required: True
        type: string
      responses:
        '200':
          description: Success Request
          schema:
            $ref: '#/definitions/offices'
        '404':
          description: Not found Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
    put:
      tags:
      - Offices
      summary: Update an existing office
      description: Update all office fields, the office filter by officeCode key
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: officeCode
        in: path
        description: Office code that need to be considered for filter
        required: True
        type: string
      - name: offices rows
        in: body
        description: Office rows that needs to be updated in store
        required: true
        schema:
          $ref: '#/definitions/offices'
      responses:
        '200':
          description: Updated Request
          schema:
            $ref: '#/definitions/offices'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '422':
          description: Invalid field input
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
    patch:
      tags:
      - Offices
      summary: Update fields of existing office
      description: Update some office specific fields, the office filter by officeCode key
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: officeCode
        in: path
        description: Office code that need to be considered for filter
        required: True
        type: string
      - name: offices rows
        in: body
        description: Office rows that needs to be updated in store
        required: true
        schema:
          $ref: '#/definitions/offices_patch'
      responses:
        '200':
          description: Updated Request
          schema:
            $ref: '#/definitions/offices'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '422':
          description: Invalid field input
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
    delete:
      tags:
      - Offices
      summary: Delete one office
      description: Delete filtered office by its officeCode key
      produces:
      - application/json
      parameters:
      - name: officeCode
        in: path
        description: Office code that need to be considered for filter
        required: True
        type: string
      responses:
        '204':
          description: Deleted Request
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
        '404':
          description: Not found Request
          content:
            application/json:
              schema:
                $ref: '#/definitions/Error'
  /employees/:
    get:
      tags:
      - Employees
      summary: Return all employees rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /customers/:
    get:
      tags:
      - Customers
      summary: Return all customers rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /productlines/:
    get:
      tags:
      - Productlines
      summary: Return all productlines rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /products/:
    get:
      tags:
      - Products
      summary: Return all products rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /orders/:
    get:
      tags:
      - Orders
      summary: Return all orders rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /orderdetails/:
    get:
      tags:
      - Orderdetails
      summary: Return all orderdetails rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
  /payments/:
    get:
      tags:
      - Payments
      summary: Return all payments rows
      responses:
        '200':
          description: Success Request
          schema:
            $ref:
definitions:
  offices:
    type: object
    properties:
      officeCode:
        type: string
        format: uuid
        maxLength: 10
        uniqueItems: True
      city:
        type: string
        maxLength: 50
      phone:
        type: string
        maxLength: 50
      addressLine1:
        type: string
        maxLength: 50
      addressLine2:
        type: string
        maxLength: 50
        multipleOf: True
      state:
        type: string
        maxLength: 50
        multipleOf: True
      country:
        type: string
        maxLength: 50
      postalCode:
        type: string
        maxLength: 15
      territory:
        type: string
        maxLength: 50
  offices_patch:
    type: object
    properties:
      officeCode:
        type: string
        format: uuid
        maxLength: 10
        uniqueItems: True
      phone:
        type: string
        maxLength: 50
      addressLine1:
        type: string
        maxLength: 50
      addressLine2:
        type: string
        maxLength: 50
        multipleOf: True
      postalCode:
        type: string
        maxLength: 15
  employees:
    type: object
    properties:
      employeeNumber:
        type: integer
        format: int64
        uniqueItems: True
      lastName:
        type: string
        maxLength: 50
      firstName:
        type: string
        maxLength: 50
      extension:
        type: string
        maxLength: 10
      email:
        type: string
        format: email
        maxLength: 100
      jobTitle:
        type: string
        maxLength: 50
      officeCode:
        type: string
        maxLength: 10
      reportsTo:
        type: integer
        format: int64
        multipleOf: True
  employees_patch:
    type: object
    properties:
      employeeNumber:
        type: integer
        format: int64
        uniqueItems: True
      extension:
        type: string
        maxLength: 10
      jobTitle:
        type: string
        maxLength: 50
      officeCode:
        type: string
        maxLength: 10
      reportsTo:
        type: integer
        format: int64
        multipleOf: True
  customers:
    type: object
    properties:
      customerNumber:
        type: integer
        format: int64
        uniqueItems: True
      customerName:
        type: string
        maxLength: 50
      contactLastName:
        type: string
        maxLength: 50
      contactFirstName:
        type: string
        maxLength: 50
      phone:
        type: string
        maxLength: 50
      addressLine1:
        type: string
        maxLength: 50
      addressLine2:
        type: string
        maxLength: 50
        multipleOf: True
      city:
        type: string
        maxLength: 50
      state:
        type: string
        maxLength: 50
        multipleOf: True
      postalCode:
        type: string
        maxLength: 15
        multipleOf: True
      country:
        type: string
        maxLength: 50
      creditLimit:
        type: number
        format: float
      salesRepEmployeeNumber:
        type: integer
        format: int64
  customers_patch:
    type: object
    properties:
      customerNumber:
        type: integer
        format: int64
        uniqueItems: True
      phone:
        type: string
        maxLength: 50
      addressLine1:
        type: string
        maxLength: 50
      addressLine2:
        type: string
        maxLength: 50
        multipleOf: True
      postalCode:
        type: string
        maxLength: 15
        multipleOf: True
  productlines:
    type: object
    properties:
      productLine:
        type: string
        maxLength: 50
        uniqueItems: True
      textDescription:
        type: string
        maxLength: 4000
        multipleOf: True
      htmlDescription:
        type: string
        maxLength: 200
        multipleOf: True
        xml:
          namespace: 'http://name.com/clasification/Nname'
          prefix: Nname
      image:
        type: string
        maxLength: 100
        multipleOf: True
        paramType: path
  productlines_patch:
    type: object
    properties:
      productLine:
        type: string
        maxLength: 50
        uniqueItems: True
      textDescription:
        type: string
        maxLength: 4000
        multipleOf: True
      htmlDescription:
        type: string
        maxLength: 200
        multipleOf: True
        xml:
          namespace: 'http://name.com/clasification/Nname'
          prefix: Nname
  products:
    type: object
    properties:
      productCode:
        type: string
        maxLength: 15
        uniqueItems: True
      productName:
        type: string
        maxLength: 70
      productLine:
        type: string
        maxLength: 50
      productScale:
        type: string
        maxLength: 10
      productVendor:
        type: string
        maxLength: 50
      productDescription:
        type: string
        maxLength: 200
      quantityInStock:
        type: integer
        format: int32
        minimum: 0
      buyPrice:
        type: number
        format: float
      MSRP:
        type: number
        format: float
  products_patch:
    type: object
    properties:
      productCode:
        type: string
        maxLength: 15
        uniqueItems: True
      productVendor:
        type: string
        maxLength: 50
      productDescription:
        type: string
        maxLength: 200
        minimum: 0
      buyPrice:
        type: number
        format: float
  orders:
    type: object
    properties:
      orderNumber:
        type: integer
        format: int64
        uniqueItems: True
      orderDate:
        type: string
        format: date-time
      requiredDate:
        type: string
        format: date
      shippedDate:
        type: string
        format: date
        multipleOf: True
      status:
        type: string
        maxLength: 15
      comments:
        type: string
        maxLength: 200
        multipleOf: True
      customerNumber:
        type: integer
        format: int64
  orders_patch:
    type: object
    properties:
      orderNumber:
        type: integer
        format: int64
        uniqueItems: True
      requiredDate:
        type: string
        format: date
      shippedDate:
        type: string
        format: date
        multipleOf: True
      status:
        type: string
        maxLength: 15
      comments:
        type: string
        maxLength: 200
        multipleOf: True
  orderdetails:
    type: object
    properties:
      orderNumber:
        type: integer
        format: int64
        uniqueItems: True
      productCode:
        type: string
        maxLength: 15
        uniqueItems: True
      quantityOrdered:
        type: integer
        format: int64
      priceEach:
        type: number
        format: float
      orderLineNumber:
        type: integer
        format: int32
  orderdetails_patch:
    type: object
    properties:
      orderNumber:
        type: integer
        format: int64
        uniqueItems: True
      productCode:
        type: string
        maxLength: 15
        uniqueItems: True
      quantityOrdered:
        type: integer
        format: int64
  payments:
    type: object
    properties:
      customerNumber:
        type: integer
        format: int64
        uniqueItems: True
      checkNumber:
        type: string
        maxLength: 50
        uniqueItems: True
      paymentDate:
        type: string
        format: date
      amount:
        type: number
        format: float
  Error:
    type: object
    properties:
      code:
        description: http code
        type: string
      status:
        description: http status
        type: integer
        format: int32
      type:
        type: string
        description: Error type
      message:
        type: string
        description: Generic error to imply an unexpected condition in server
